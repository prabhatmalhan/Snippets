{
  "settings.json": "{\r\n  \"workbench.colorTheme\": \"Atom One Dark\",\r\n  \"editor.cursorBlinking\": \"expand\",\r\n  \"workbench.preferredLightColorTheme\": \"CandyLand\",\r\n  \"code-runner.runInTerminal\": true,\r\n  \"code-runner.saveAllFilesBeforeRun\": true,\r\n  \"code-runner.saveFileBeforeRun\": true,\r\n  \"editor.formatOnSave\": true,\r\n  \"[jsonc]\": {\r\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\r\n  },\r\n  \"editor.fontSize\": 20\r\n}\r\n",
  "keybindings.json": "// Place your key bindings in this file to override the defaultsauto[]\r\n[\r\n    {\r\n        \"key\": \"ctrl+d\",\r\n        \"command\": \"-editor.action.addSelectionToNextFindMatch\",\r\n        \"when\": \"editorFocus\"\r\n    },\r\n    {\r\n        \"key\": \"ctrl+d\",\r\n        \"command\": \"editor.action.deleteLines\",\r\n        \"when\": \"textInputFocus && !editorReadonly\"\r\n    },\r\n    {\r\n        \"key\": \"ctrl+shift+k\",\r\n        \"command\": \"-editor.action.deleteLines\",\r\n        \"when\": \"textInputFocus && !editorReadonly\"\r\n    },\r\n    {\r\n        \"key\": \"ctrl+alt+r\",\r\n        \"command\": \"workbench.action.reloadWindow\"\r\n    },\r\n    {\r\n        \"key\": \"ctrl+r\",\r\n        \"command\": \"-workbench.action.reloadWindow\",\r\n        \"when\": \"isDevelopment\"\r\n    }\r\n]",
  "extensionList": [
    {
      "id": "akamud.vscode-theme-onedark",
      "uuid": "9b2c953d-6ad4-46d1-b18e-7e5992d1d8a6",
      "name": "vscode-theme-onedark",
      "publisher": "akamud",
      "version": "2.2.3"
    },
    {
      "id": "esbenp.prettier-vscode",
      "uuid": "96fa4707-6983-4489-b7c5-d5ffdfdcce90",
      "name": "prettier-vscode",
      "publisher": "esbenp",
      "version": "9.3.0"
    },
    {
      "id": "formulahendry.code-runner",
      "uuid": "a6a0c5b2-d078-4bf5-a9ee-4e37054414b3",
      "name": "code-runner",
      "publisher": "formulahendry",
      "version": "0.11.7"
    },
    {
      "id": "gerane.Theme-CandyLand",
      "uuid": "9bb32fe4-da08-4c55-a8db-e1a4d8dbe5d4",
      "name": "Theme-CandyLand",
      "publisher": "gerane",
      "version": "0.0.5"
    },
    {
      "id": "jeferwang.vscode-setting-export",
      "uuid": "5fb44da2-d0b9-4343-adf0-cb3a7e110994",
      "name": "vscode-setting-export",
      "publisher": "jeferwang",
      "version": "0.0.6"
    },
    {
      "id": "ms-python.python",
      "uuid": "f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5",
      "name": "python",
      "publisher": "ms-python",
      "version": "2022.2.1924087327"
    },
    {
      "id": "ms-python.vscode-pylance",
      "uuid": "364d2426-116a-433a-a5d8-a5098dc3afbd",
      "name": "vscode-pylance",
      "publisher": "ms-python",
      "version": "2022.3.1"
    },
    {
      "id": "ms-toolsai.jupyter",
      "uuid": "6c2f1801-1e7f-45b2-9b5c-7782f1e076e8",
      "name": "jupyter",
      "publisher": "ms-toolsai",
      "version": "2022.2.1030672458"
    },
    {
      "id": "ms-toolsai.jupyter-keymap",
      "uuid": "9f6dc8db-620c-4844-b8c5-e74914f1be27",
      "name": "jupyter-keymap",
      "publisher": "ms-toolsai",
      "version": "1.0.0"
    },
    {
      "id": "ms-toolsai.jupyter-renderers",
      "uuid": "b15c72f8-d5fe-421a-a4f7-27ed9f6addbf",
      "name": "jupyter-renderers",
      "publisher": "ms-toolsai",
      "version": "1.0.6"
    },
    {
      "id": "ms-vscode.cpptools",
      "uuid": "690b692e-e8a9-493f-b802-8089d50ac1b2",
      "name": "cpptools",
      "publisher": "ms-vscode",
      "version": "1.8.4"
    },
    {
      "id": "nobuhito.printcode",
      "uuid": "4f1ac5ff-ef9c-4c01-8324-cfaa7f215f57",
      "name": "printcode",
      "publisher": "nobuhito",
      "version": "3.0.0"
    },
    {
      "id": "ritwickdey.LiveServer",
      "uuid": "b63c44fd-0457-4696-99e9-dbfdf70d77de",
      "name": "LiveServer",
      "publisher": "ritwickdey",
      "version": "5.7.5"
    }
  ],
  "snippets": {
    "c.json": "{\n  \"c program\": {\n    \"prefix\": \"cpro\",\n    \"body\": [\n      \"#include<stdio.h>\",\n      \"$1\",\n      \"int main($2)\",\n      \"{\",\n      \"    $3\",\n      \"    return 0;\",\n      \"}\"\n    ],\n    \"description\": \"basic c program\"\n  },\n  \"include\": {\n    \"prefix\": \"inc\",\n    \"body\": [\"#include <$1.h>\"],\n    \"description\": \"include header file\"\n  },\n  \"for loop\": {\n    \"prefix\": \"forl\",\n    \"body\": [\"for(int ${1:i}=${2:0} ; $1<${3:n} ; ++$1)\", \"{\", \"    $4\", \"}\"],\n    \"description\": \"for loop\"\n  },\n  \"reverse for loop\": {\n    \"prefix\": \"rforl\",\n    \"body\": [\"for(int ${1:i}=${2:n} ; $1>${3:0} ; --$1)\", \"{\", \"    $4\", \"}\"],\n    \"description\": \"reverse for loop\"\n  },\n  \"input array\": {\n    \"prefix\": \"inarr\",\n    \"body\": [\n      \"for(int i=0 ; i<${1:n} ; ++i)\",\n      \"    scanf(\\\"%d\\\",&${2:arr}[i]);\"\n    ],\n    \"description\": \"input array\"\n  },\n  \"Printf precise\": {\n    \"prefix\": \"pr\",\n    \"body\": [\"printf(\\\"${1}\\\"$2);\"],\n    \"description\": \"print statement\"\n  },\n  \"print array\": {\n    \"prefix\": \"prarr\",\n    \"body\": [\"for(i=0 ; i<${1:n} ; ++i)\", \"    printf(\\\"%d\\\",${2:arr}[i]);\"],\n    \"description\": \"print array\"\n  },\n  \"sort array\": {\n    \"prefix\": \"sort\",\n    \"body\": [\n      \"for(int i=0;i<${1:n}-1;++i)\",\n      \"{\",\n      \"    sm = i;\",\n      \"    for(int j=i+1 ; j<$1 ; ++j)\",\n      \"        if(${2:arr}[sm]>$2[j])\",\n      \"          sm = j;\",\n      \"    int temp = $2[sm];\",\n      \"    $2[sm]=$2[i];\",\n      \"    $2[i]=temp;\",\n      \"}\"\n    ],\n    \"description\": \"sort array\"\n  },\n  \"linear search\": {\n    \"prefix\": \"lsearch\",\n    \"body\": [\n      \"for(int i=0;i<${1:n};++i)\",\n      \"{\",\n      \"    if(${2:arr}[i] == ind)\",\n      \"    {\",\n      \"        $3\",\n      \"    }\",\n      \"}\"\n    ],\n    \"description\": \"linear search\"\n  },\n  \"binary search\": {\n    \"prefix\": \"bsearch\",\n    \"body\": [\n      \"int b=${1:0},e=${2:n}-1;\",\n      \"while(b<=e)\",\n      \"{\",\n      \"    int mid=(b+e)/2;\",\n      \"    if(${3:arr}[mid] == ${4:k})\",\n      \"    {\",\n      \"        $5\",\n      \"    }\",\n      \"    else if($3[mid] < $4)\",\n      \"    {\",\n      \"        $6\",\n      \"    }\",\n      \"    else\",\n      \"    {\",\n      \"        $7\",\n      \"    }\",\n      \"}\",\n      \"    \"\n    ],\n    \"description\": \"binary search\"\n  },\n  \"trenary operator\": {\n    \"prefix\": \"ter\",\n    \"body\": [\"$1?$2:$3\"],\n    \"description\": \"ternary operator\"\n  },\n  \"while loop\": {\n    \"prefix\": \"whilel\",\n    \"body\": [\"while(${1:n})\", \"{\", \"    $2\", \"    --$1;\", \"}\"],\n    \"description\": \"while loop\"\n  },\n  \"do - while loop\": {\n    \"prefix\": \"dowl\",\n    \"body\": [\"do\", \"{\", \"    $1\", \"    --$2;\", \"}while(${2:n});\"],\n    \"description\": \"do - while loop\"\n  },\n  \"switch case\": {\n    \"prefix\": \"sw\",\n    \"body\": [\n      \"switch($1)\",\n      \"{\",\n      \"    case $2:$3\",\n      \"            break;\",\n      \"    $4\",\n      \"    default:$5\",\n      \"}\"\n    ],\n    \"description\": \"switch case\"\n  },\n  \"input\": {\n    \"prefix\": \"in\",\n    \"body\": [\"${1:int} ${2:n};\", \"scanf(\\\"%${3:d}\\\",&$2);\"],\n    \"description\": \"input\"\n  },\n  \"function defination\": {\n    \"prefix\": \"fun\",\n    \"body\": [\n      \"${1:void} ${2:fun}($3)\",\n      \"{\",\n      \"    $4\",\n      \"    ${5:return ${6}};\",\n      \"}\"\n    ],\n    \"description\": \"function defination\"\n  },\n  \"recursive function defination\": {\n    \"prefix\": \"rfun\",\n    \"body\": [\n      \"${1:void} ${2:fun}($3)\",\n      \"{\",\n      \"    if($4)\",\n      \"      return $5;\",\n      \"    else\",\n      \"    {\",\n      \"        $6\",\n      \"        ${7:return ${8}$2($9)};\",\n      \"     }\",\n      \"}\"\n    ],\n    \"description\": \"recursive function defination\"\n  },\n  \"structure defintation\": {\n    \"prefix\": \"stru\",\n    \"body\": [\"struct $1\", \"{\", \"    $2\", \"}$3;\"],\n    \"description\": \"structure defintation\"\n  },\n  \"file defination\": {\n    \"prefix\": \"filed\",\n    \"body\": [\n      \"File *${1:f};\",\n      \"$1 = fopen(\\\"$2\\\",\\\"${3:a+}\\\");\",\n      \"if($1 == NULL)\",\n      \"{\",\n      \"    puts(\\\"Unable to open file\\\");\",\n      \"    exit(1);\",\n      \"}\"\n    ],\n    \"description\": \"file defination\"\n  },\n  \"malloc\": {\n    \"prefix\": \"mal\",\n    \"body\": [\"${1:int} *${2:p};\", \"$2 = ($1*)malloc(${3:n}*sizeof($1));\"],\n    \"description\": \"malloc\"\n  }\n}\n",
    "cpp.json": "{\n  \"cpp program\": {\n    \"prefix\": \"cppro\",\n    \"body\": [\n      \"#include<bits/stdc++.h>\",\n      \"$1\",\n      \"#define ll long long\",\n      \"#define vi vector <int>\",\n      \"using namespace std;\",\n      \"\\n\",\n      \"int main($2)\",\n      \"{\",\n      \"\\t$3\",\n      \"\\treturn 0;\",\n      \"}\"\n    ],\n    \"description\": \"basic c++ program\"\n  },\n  \"fast cpp program\": {\n    \"prefix\": \"cfpro\",\n    \"body\": [\n      \"#include<bits/stdc++.h>\",\n      \"$1\",\n      \"#define vi vector <int>\",\n      \"#define ll long long\",\n      \"using namespace std;\",\n      \"\",\n      \"int main($2)\",\n      \"{\",\n      \"\\tios_base::sync_with_stdio(false);\",\n      \"\\tcin.tie(NULL);\",\n      \"\\tint no=1;\",\n      \"\\tcin>>no;\",\n      \"\\tfor (int f = 0; f < no; f++)\",\n      \"\\t{\",\n      \"\\t\\t$3\",\n      \"\\t}\",\n      \"\\t$4\",\n      \"\\treturn 0;\",\n      \"}\"\n    ],\n    \"description\": \"faster c++ program\"\n  },\n  \"Printing a map\": {\n    \"prefix\": \"prma\",\n    \"body\": [\"for(auto x: m)\", \"\\tcout<<x.first<<$1<<x.second<<endl;\"],\n    \"description\": \"printing a map\"\n  },\n  \"competetive cpp program\": {\n    \"prefix\": \"ccppro\",\n    \"body\": [\n      \"#include<bits/stdc++.h>\",\n      \"\",\n      \"#define mod 1000000007\",\n      \"#define INF 1000000005\",\n      \"#define INFL 1000000000000000005ll\",\n      \"#define PI 3.1415926535897932384626\",\n      \"#define all(x) x.begin(), x.end()\",\n      \"#define sortall(x) sort(all(x))\",\n      \"#define pb push_back\",\n      \"#define mp make_pair\",\n      \"#define gcd __gcd\",\n      \"#define pii pair<int, int>\",\n      \"#define vi vector <int>\",\n      \"#define vp vector<pii>\",\n      \"#define ll long long\\n\",\n      \"using namespace std;\",\n      \"\\n// DEBUG\",\n      \"void __PRINT(int x) {cout << x;}\",\n      \"void __PRINT(long x) {cout << x;}\",\n      \"void __PRINT(unsigned x) {cout << x;}\",\n      \"void __PRINT(unsigned long x) {cout << x;}\",\n      \"void __PRINT(unsigned long long x) {cout << x;}\",\n      \"void __PRINT(float x) {cout << x;}\",\n      \"void __PRINT(double x) {cout << x;}\",\n      \"void __PRINT(long double x) {cout << x;}\",\n      \"void __PRINT(char x) {cout << '\\\\'' << x << '\\\\'';}\",\n      \"void __PRINT(const char *x) {cout << '\\\"' << x << '\\\"';}\",\n      \"void __PRINT(const string &x) {cout << '\\\"' << x << '\\\"';}\",\n      \"void __PRINT(bool x) {cout << (x ? \\\"true\\\" : \\\"false\\\");}\",\n      \"\\ntemplate <typename T, typename V>\",\n      \"void __PRINT(const pair<T, V> &x);\",\n      \"template <typename T>\",\n      \"void __PRINT(const vector<T> &x);\",\n      \"template<typename T>\",\n      \"void __PRINT(const T &x);\\n\",\n      \"template<typename T, typename V>\",\n      \"void __PRINT(const pair<T, V> &x) {cout << '{'; __PRINT(x.first); cout << ','; __PRINT(x.second); cout << \\\"}\\\";}\",\n      \"template<typename T, typename V, typename U>\",\n      \"void __PRINT(const tuple<T, V, U> &x) {cout << '{'; __PRINT(get<0>(x)); cout << ','; __PRINT(get<1>(x));cout << ',' << get<2>(x); cout << \\\"}\\\";}\",\n      \"template<typename T>\",\n      \"void __PRINT(const vector<T> &x) {cout << \\\"{\\\";for(int u69=0;u69<x.size();u69++){__PRINT(x[u69]);cout << (u69+1==x.size()?\\\"\\\":\\\",\\\");};cout << \\\"}\\\";}\",\n      \"template<typename T>\",\n      \"void __PRINT(const T &x) {int f = 0; cout << '{'; for (auto &i: x) cout << (f++ ? \\\",\\\" : \\\"\\\"), __PRINT(i); cout << \\\"}\\\";}\",\n      \"void _PRINT() {cout << \\\"]\\\"<<endl;}\",\n      \"template <typename T, typename... V>\",\n      \"void _PRINT(T t, V... v) {__PRINT(t); if (sizeof...(v)) cout << \\\", \\\"; _PRINT(v...);}\",\n      \"#ifndef ONLINE_JUDGE\",\n      \"#define debug(x...) cout << \\\"[\\\" << #x << \\\"] = [\\\"; _PRINT(x)\",\n      \"#else\",\n      \"#define debug(x...)\",\n      \"#endif\\n\",\n      \"int main()\",\n      \"{\",\n      \"\\tios_base::sync_with_stdio(false);\",\n      \"\\tcin.tie(NULL);\\n\",\n      \"\\tint no=1;\",\n      \"\\tcin>>no;\",\n      \"\\tfor (int f = 0; f < no; f++)\",\n      \"\\t{\",\n      \"\\t\\t$3\",\n      \"\\t}\",\n      \"\\t$4\",\n      \"\\treturn 0;\",\n      \"}\"\n    ],\n    \"description\": \"Competetive c++ program\"\n  },\n  \"LeetCode Debug\": {\n    \"prefix\": \"lcppro\",\n    \"body\": [\n      \"#include<bits/stdc++.h>\",\n      \"\",\n      \"#define mod 1000000007\",\n      \"#define INF 1000000005\",\n      \"#define INFL 1000000000000000005ll\",\n      \"#define PI 3.1415926535897932384626\",\n      \"#define all(x) x.begin(), x.end()\",\n      \"#define sortall(x) sort(all(x))\",\n      \"#define pb push_back\",\n      \"#define mp make_pair\",\n      \"#define gcd __gcd\",\n      \"#define pii pair<int, int>\",\n      \"#define vi vector <int>\",\n      \"#define vp vector<pii>\",\n      \"#define ll long long\\n\",\n      \"using namespace std;\",\n      \"\\n// DEBUG\",\n      \"void __PRINT(int x) {cout << x;}\",\n      \"void __PRINT(long x) {cout << x;}\",\n      \"void __PRINT(unsigned x) {cout << x;}\",\n      \"void __PRINT(unsigned long x) {cout << x;}\",\n      \"void __PRINT(unsigned long long x) {cout << x;}\",\n      \"void __PRINT(float x) {cout << x;}\",\n      \"void __PRINT(double x) {cout << x;}\",\n      \"void __PRINT(long double x) {cout << x;}\",\n      \"void __PRINT(char x) {cout << '\\\\'' << x << '\\\\'';}\",\n      \"void __PRINT(const char *x) {cout << '\\\"' << x << '\\\"';}\",\n      \"void __PRINT(const string &x) {cout << '\\\"' << x << '\\\"';}\",\n      \"void __PRINT(bool x) {cout << (x ? \\\"true\\\" : \\\"false\\\");}\",\n      \"\\ntemplate <typename T, typename V>\",\n      \"void __PRINT(const pair<T, V> &x);\",\n      \"template <typename T>\",\n      \"void __PRINT(const vector<T> &x);\",\n      \"template<typename T>\",\n      \"void __PRINT(const T &x);\\n\",\n      \"template<typename T, typename V>\",\n      \"void __PRINT(const pair<T, V> &x) {cout << '{'; __PRINT(x.first); cout << ','; __PRINT(x.second); cout << \\\"}\\\";}\",\n      \"template<typename T, typename V, typename U>\",\n      \"void __PRINT(const tuple<T, V, U> &x) {cout << '{'; __PRINT(get<0>(x)); cout << ','; __PRINT(get<1>(x));cout << ',' << get<2>(x); cout << \\\"}\\\";}\",\n      \"template<typename T>\",\n      \"void __PRINT(const vector<T> &x) {cout << \\\"{\\\";for(int u69=0;u69<x.size();u69++){__PRINT(x[u69]);cout << (u69+1==x.size()?\\\"\\\":\\\",\\\");};cout << \\\"}\\\";}\",\n      \"template<typename T>\",\n      \"void __PRINT(const T &x) {int f = 0; cout << '{'; for (auto &i: x) cout << (f++ ? \\\",\\\" : \\\"\\\"), __PRINT(i); cout << \\\"}\\\";}\",\n      \"void _PRINT() {cout << \\\"]\\\"<<endl;}\",\n      \"template <typename T, typename... V>\",\n      \"void _PRINT(T t, V... v) {__PRINT(t); if (sizeof...(v)) cout << \\\", \\\"; _PRINT(v...);}\",\n      \"#ifndef ONLINE_JUDGE\",\n      \"#define debug(x...) cout << \\\"[\\\" << #x << \\\"] = [\\\"; _PRINT(x)\",\n      \"#else\",\n      \"#define debug(x...)\",\n      \"#endif\\n\\n\",\n      \"${1}\",\n      \"\\n\\nint main()\",\n      \"{\",\n      \"\\t$2\",\n      \"\\treturn 0;\",\n      \"}\"\n    ],\n    \"description\": \"Competetive c++ program\"\n  },\n  \"include\": {\n    \"prefix\": \"inc\",\n    \"body\": [\"#include <$1>\"],\n    \"description\": \"include header file\"\n  },\n  \"online judge\": {\n    \"prefix\": \"onj\",\n    \"body\": [\n      \"\\n#ifndef ONLINE_JUDGE\",\n      \"\\tfreopen(\\\"in.txt\\\", \\\"r\\\", stdin);\",\n      \"\\tfreopen(\\\"out.txt\\\", \\\"w\\\", stdout);\",\n      \"#endif\\n\"\n    ],\n    \"description\": \"define input and output file as I/O\"\n  },\n  \"for loop\": {\n    \"prefix\": \"forl\",\n    \"body\": [\"for(int ${1:i}=${2:0} ; $1<${3:n} ; ++$1)\", \"{\", \"\\t$4\", \"}\"],\n    \"description\": \"for loop\"\n  },\n  \"Count Frequency and save in map\": {\n    \"prefix\": \"frem\",\n    \"body\": [\n      \"map<int, int> m;\",\n      \"for (int i = 0; i < n; i++)\",\n      \"\\tm[arr[i]]++;\"\n    ],\n    \"description\": \"frequency count\"\n  },\n  \"reverse for loop\": {\n    \"prefix\": \"rforl\",\n    \"body\": [\"for(int ${1:i}=${2:n} ; $1>${3:0} ; --$1)\", \"{\", \"\\t$4\", \"}\"],\n    \"description\": \"reverse for loop\"\n  },\n  \"input array\": {\n    \"prefix\": \"inarr\",\n    \"body\": [\n      \"int ${1:arr}[${2:n}];\",\n      \"for(int i=0 ; i<${2:n} ; ++i)\",\n      \"\\tcin>>${1:arr}[i];\"\n    ],\n    \"description\": \"input array\"\n  },\n  \"input 2-D array\": {\n    \"prefix\": \"inarr2\",\n    \"body\": [\n      \"int ${1:arr}[${2:m}][${3:n}];\",\n      \"for(int i=0 ; i<${2:m} ; ++i)\",\n      \"\\tfor(int j=0 ; j<${3:n} ; ++j)\",\n      \"\\t\\tcin>>${1:arr}[i][j];\"\n    ],\n    \"description\": \"input 2-d array\"\n  },\n  \"input vector\": {\n    \"prefix\": \"invec\",\n    \"body\": [\n      \"vi ${1:arr}(${2:n});\",\n      \"for(int i=0 ; i<${2:n} ; ++i)\",\n      \"\\tcin>>${1:arr}[i];\"\n    ],\n    \"description\": \"input array\"\n  },\n  \"Sort Line\": {\n    \"prefix\": \"so\",\n    \"body\": [\"sort(arr,arr+n);\"],\n    \"description\": \"line for sort\"\n  },\n  \"Sort With Index Tracked\": {\n    \"prefix\": \"soin\",\n    \"body\": [\n      \"sort(ind, ind + n, [&](int i, int j){ return arr[i] < arr[j]; });\",\n      \"sort(arr, arr + n);\"\n    ],\n    \"description\": \"line for sorting with indexes in track\"\n  },\n  \"Prefix sum array\": {\n    \"prefix\": \"pref\",\n    \"body\": [\n      \"int psa[n+1];\",\n      \"psa[0]=0;\",\n      \"for (int i = 0; i < n; i++)\",\n      \"{\",\n      \"\\tpsa[i+1] = psa[i] + arr[i];\",\n      \"}\"\n    ],\n    \"description\": \"prefix sum of array\"\n  },\n  \"Printf precise\": {\n    \"prefix\": \"pr\",\n    \"body\": [\"cout<<$1${2:<<endl};\"],\n    \"description\": \"print statement\"\n  },\n  \"print array\": {\n    \"prefix\": \"prarr\",\n    \"body\": [\n      \"for(int i=0 ; i<${1:arr}.size() ; ++i)\",\n      \"\\tcout<<${1:arr}[i]<<\\\" \\\";\"\n    ],\n    \"description\": \"print array\"\n  },\n  \"sort array\": {\n    \"prefix\": \"compsrt\",\n    \"body\": [\n      \"for(int i=0;i<${1:n}-1;++i)\",\n      \"{\",\n      \"    sm = i;\",\n      \"    for(int j=i+1 ; j<$1 ; ++j)\",\n      \"    \\tif(${2:arr}[sm]>$2[j])\",\n      \"    \\t\\tsm = j;\",\n      \"    int temp = $2[sm];\",\n      \"    $2[sm]=$2[i];\",\n      \"    $2[i]=temp;\",\n      \"}\"\n    ],\n    \"description\": \"sort array\"\n  },\n  \"linear search\": {\n    \"prefix\": \"lsearch\",\n    \"body\": [\n      \"for(int i=0;i<${1:n};++i)\",\n      \"{\",\n      \"\\tif(${2:arr}[i] == ind)\",\n      \"\\t{\",\n      \"\\t\\t$3\",\n      \"\\t}\",\n      \"}\",\n      \"\"\n    ],\n    \"description\": \"linear search\"\n  },\n  \"binary search\": {\n    \"prefix\": \"bsearch\",\n    \"body\": [\n      \"int b=${1:0},e=${2:n}-1;\",\n      \"while(b<=e)\",\n      \"{\",\n      \"\\tint mid=(b+e)/2;\",\n      \"\\tif(${3:arr}[mid] == ${4:k})\",\n      \"\\t{\",\n      \"\\t\\t$5\",\n      \"\\t}\",\n      \"\\telse if($3[mid] < $4)\",\n      \"\\t{\",\n      \"\\t\\t$6\",\n      \"\\t}\",\n      \"\\telse\",\n      \"\\t{\",\n      \"\\t\\t$7\",\n      \"\\t}\",\n      \"}\"\n    ],\n    \"description\": \"binary search\"\n  },\n  \"trenary operator\": {\n    \"prefix\": \"ter\",\n    \"body\": [\"$1?$2:$3\"],\n    \"description\": \"ternary operator\"\n  },\n  \"while loop\": {\n    \"prefix\": \"whilel\",\n    \"body\": [\"while(${1:n})\", \"{\", \"\\t$2\", \"\\t--$1;\", \"}\"],\n    \"description\": \"while loop\"\n  },\n  \"input\": {\n    \"prefix\": \"in\",\n    \"body\": [\"${1:int} ${2:n};\", \"cin>>$2;\"],\n    \"description\": \"input\"\n  },\n  \"function defination\": {\n    \"prefix\": \"fun\",\n    \"body\": [\"${1:void} ${2:fun}($3)\", \"{\", \"\\t$4\", \"\\t${5:return ${6}};\", \"}\"],\n    \"description\": \"function defination\"\n  },\n  \"structure defintation\": {\n    \"prefix\": \"stru\",\n    \"body\": [\"struct $1\", \"{\", \"\\t$2\", \"}$3;\"],\n    \"description\": \"structure defintation\"\n  },\n  \"file defination\": {\n    \"prefix\": \"filopn\",\n    \"body\": [\n      \"File *${1:f};\",\n      \"$1 = fopen(\\\"$2\\\",\\\"${3:a+}\\\");\",\n      \"if($1 == NULL)\",\n      \"{\",\n      \"\\tputs(\\\"Unable to open file\\\");\",\n      \"\\texit(1);\",\n      \"}\"\n    ],\n    \"description\": \"file defination\"\n  },\n  \"malloc\": {\n    \"prefix\": \"mal\",\n    \"body\": [\"${1:int} *${2:p};\", \"$2 = ($1*)malloc(${3:n}*sizeof($1));\"],\n    \"description\": \"malloc\"\n  },\n  \"Class Defination\": {\n    \"prefix\": \"cla\",\n    \"body\": [\n      \"class $1\",\n      \"{\",\n      \"\\t$2\",\n      \"\\t${3:private:}\",\n      \"\\t$4\",\n      \"\\t${5:public:}\",\n      \"\\t$6\",\n      \"};\"\n    ],\n    \"description\": \"Class Defination\"\n  },\n  \"Factorial Function Defination\": {\n    \"prefix\": \"fct\",\n    \"body\": [\n      \"unordered_map<ll int,ll int> dp;\",\n      \"ll fact(ll n)\",\n      \"{\",\n      \"\\tif(n == 0) return 1;\",\n      \"\\tif(n == 1) return n;\",\n      \"\\tif(dp.find(n) != dp.end()) return dp[n];\",\n      \"\\treturn dp[n] = n*fact(n-1);\",\n      \"}\"\n    ],\n    \"description\": \"Factorial Function\"\n  },\n  \"Longest Common Substring\": {\n    \"prefix\": \"lcs\",\n    \"body\": [\n      \"int longcomstr(string s1, string s2)\",\n      \"{\",\n      \"\\tint n = s1.length();\",\n      \"\\tint m = s2.length();\",\n      \"\\tint dp[n+1][m+1];\",\n      \"\\tfor(int i=0 ; i<=n ; ++i)\",\n      \"\\t{\",\n      \"\\t\\tfor(int j=0 ; j<=m ; ++j)\",\n      \"\\t\\t{\",\n      \"\\t\\t\\tif (i==0 || j==0)\",\n      \"\\t\\t\\t\\tdp[i][j] = 0;\",\n      \"\\t\\t}\",\n      \"\\t}\",\n      \"\\tfor(int i=1 ; i<=n ; ++i)\",\n      \"\\t{\",\n      \"\\t\\tfor(int j=1 ; j<=m ; ++j)\",\n      \"\\t\\t\\t{\",\n      \"\\t\\t\\tif (s1[i-1] ==  s2[j-1])\",\n      \"\\t\\t\\t\\tdp[i][j] = 1+dp[i-1][j-1];\",\n      \"\\t\\t\\telse\",\n      \"\\t\\t\\t\\tdp[i][j] = max(dp[i-1][j], dp[i][j-1]);\",\n      \"\\t\\t\\t}\",\n      \"\\t\\t}\",\n      \"\\treturn dp[n][m];\",\n      \"}\"\n    ],\n    \"description\": \"Longest Common Substring\"\n  },\n  \"Sum of Digits of a Number\": {\n    \"prefix\": \"sodg\",\n    \"body\": [\n      \"int getSum(int n)\",\n      \"{\",\n      \"\\tint sum = 0;\",\n      \"\\twhile (n != 0)\",\n      \"\\t{\",\n      \"\\t\\tsum = sum + n % 10;\",\n      \"\\t\\tn = n / 10;\",\n      \"\\t}\",\n      \"\\treturn sum;\",\n      \"}\"\n    ],\n    \"description\": \"Sum of Digits of a Number Function\"\n  },\n  \"Fibonacci Series\": {\n    \"prefix\": \"fibo\",\n    \"body\": [\n      \"unordered_map <int, int>dp;\",\n      \"\\nint fibonacci(int n)\",\n      \"{\",\n      \"\\tint f=0, s=0;\",\n      \"\\tif (n<=1)\",\n      \"\\t\\treturn n;\",\n      \"\\tif (dp.find(n-1) != dp.end())\",\n      \"\\t\\tf = dp[n-1];\",\n      \"\\telse\",\n      \"\\t\\tf = fibonacci(n-1);\",\n      \"\\tif (dp.find(n-2) != dp.end())\",\n      \"\\t\\ts = dp[n-2];\",\n      \"\\telse\",\n      \"\\t\\ts = fibonacci(n-2);\",\n      \"\\treturn dp[n] = (f+s);\",\n      \"}\"\n    ],\n    \"description\": \"Fibonacci Series uding DP\"\n  },\n  \"Stopwatch\": {\n    \"prefix\": \"sto\",\n    \"body\": [\n      \"double tick()\",\n      \"{\",\n      \"\\tstatic clock_t start_time;\",\n      \"\\tclock_t end_time = clock();\",\n      \"\\tdouble diff = 1.0 * (end_time - start_time) / CLOCKS_PER_SEC;\",\n      \"\\tstart_time = end_ticks;\",\n      \"\\treturn diff;\",\n      \"}\"\n    ],\n    \"description\": \"function to return time lapsed wherever called\"\n  },\n  \"Power Function\": {\n    \"prefix\": \"mpow\",\n    \"body\": [\n      \"ll newpow(int b, int e, int modu = 1)\",\n      \"{\",\n      \"\\tll result = 1, base = b, exp = e;\",\n      \"\\tif (modu)\",\n      \"\\t\\tbase %= mod;\",\n      \"\\twhile (exp > 0)\",\n      \"\\t{\",\n      \"\\t\\tif (exp & 1)\",\n      \"\\t\\t{\",\n      \"\\t\\t\\tresult = ((ll)result * base);\",\n      \"\\t\\t\\tif (modu)\",\n      \"\\t\\t\\t\\tresult %= mod;\",\n      \"\\t\\t}\",\n      \"\\t\\tbase = ((ll)base * base);\",\n      \"\\t\\tif (modu)\",\n      \"\\t\\t\\tbase %= mod;\",\n      \"\\t\\texp >>= 1;\",\n      \"\\t}\",\n      \"\\treturn result;\",\n      \"}\"\n    ],\n    \"description\": \"Power of a number\"\n  },\n  \"Sort in Reverse\": {\n    \"prefix\": \"revso\",\n    \"body\": [\"sort(arr, arr + n, greater<int>());\"],\n    \"description\": \"Sort an array in reverse order\"\n  },\n  \"Breadth First Search\": {\n    \"prefix\": \"bfs\",\n    \"body\": [\n      \"void bfs(vi adj[], int u, int n)\",\n      \"{\",\n      \"\\tstatic vi visited(n);\",\n      \"\\tvisited[u] = 1;\",\n      \"\\tstatic queue <int> q;\",\n      \"\\tq.push(u);\",\n      \"\\tcout<<u;\",\n      \"\\twhile (!q.empty())\",\n      \"\\t{\",\n      \"\\t\\tu = q.front();\",\n      \"\\t\\tq.pop();\",\n      \"\\t\\tfor (auto x : adj[u])\",\n      \"\\t\\t{\",\n      \"\\t\\t\\tif (visited[x] != 1)\",\n      \"\\t\\t\\t{\",\n      \"\\t\\t\\t\\tvisited[x] =1;\",\n      \"\\t\\t\\t\\tcout<<x;\",\n      \"\\t\\t\\t\\tq.push(x);\",\n      \"\\t\\t\\t}\",\n      \"\\t\\t}\",\n      \"\\t}\",\n      \"}\"\n    ],\n    \"description\": \"Find path Using Breadth First Search\"\n  },\n  \"Depth First Search\": {\n    \"prefix\": \"dfs\",\n    \"body\": [\n      \"void dfs(vi adj[], int u, int n)\",\n      \"{\",\n      \"\\tstatic vi visited(n);\",\n      \"\\tif (visited[u] == 1)\",\n      \"\\t\\treturn;\",\n      \"\\telse\",\n      \"\\t{\",\n      \"\\t\\tvisited[u] = 1;\",\n      \"\\t\\tcout<<u;\",\n      \"\\t\\tfor (auto x : adj[u])\",\n      \"\\t\\t{\",\n      \"\\t\\t\\tdfs(adj, x, n);\",\n      \"\\t\\t}\",\n      \"\\t}\",\n      \"}\"\n    ],\n    \"description\": \"Find path Using Depth First Search\"\n  },\n  \"Minimum priority queue\": {\n    \"prefix\": \"minpq\",\n    \"body\": [\"priority_queue<int, vi, greater<int>> ${1:mpq};\"],\n    \"description\": \"Priority queue in ascending order\"\n  },\n  \"LeetCode header\": {\n    \"prefix\": \"leet\",\n    \"body\": [\n      \"#ifndef ONLINE_JUDGE\",\n      \"#include <bits/stdc++.h>\",\n      \"using namespace std;\",\n      \"#endif\"\n    ],\n    \"description\": \"LeetCode header files for no errors\"\n  },\n  \"deadpool_logo\": {\n    \"prefix\": \"dpl\",\n    \"body\": [\n      \"\\n/*\",\n      \"███████████████████████████████████████████████████████████████\",\n      \"███████████████████████████████████████████████████████████████\",\n      \"█████████████████████                     █████████████████████\",\n      \"████████████████        ████       ████        ████████████████\",\n      \"██████████████      ████████       ████████      ██████████████\",\n      \"███████████      ███████████       ███████████      ███████████\",\n      \"██████████     █████████████       █████████████     ██████████\",\n      \"█████████    ███████████████       ███████████████    █████████\",\n      \"████████    ████████████████       ████████████████    ████████\",\n      \"███████    █████████████████       ████████████████    ████████\",\n      \"███████    ████   ██████████       ██████████   ████    ███████\",\n      \"███████    █████     ███████       ██████      █████    ███████\",\n      \"███████    ██████        ███       ██        ███████    ███████\",\n      \"███████    █████████████████       ████████████████    ████████\",\n      \"████████    ████████████████       ████████████████    ████████\",\n      \"█████████    ███████████████       ███████████████    █████████\",\n      \"██████████     █████████████       █████████████     ██████████\",\n      \"███████████      ███████████       ███████████     ████████████\",\n      \"██████████████      ████████       ████████      ██████████████\",\n      \"████████████████         ███       ███        █████████████████\",\n      \"█████████████████████                     █████████████████████\",\n      \"███████████████████████████████████████████████████████████████\",\n      \"███████████████████████████████████████████████████████████████\",\n      \"*/\"\n    ],\n    \"description\": \"deadpool logo\"\n  },\n  \"batman_logo\": {\n    \"prefix\": \"bman\",\n    \"body\": [\n      \"\\n/*\",\n      \"██████████████████████████████████████████████████████████████████████████████████████████████████████████████\",\n      \"██████████████████████████████████████████████████████████████████████████████████████████████████████████████\",\n      \"██████████████████████████████████████████████████████████████████████████████████████████████████████████████\",\n      \"████████████████████████████      ███████████████████████████████████████████      ███████████████████████████\",\n      \"████████████████████████           █████████████████ █████ █████████████████           ███████████████████████\",\n      \"████████████████████                     ██████████         ██████████                     ███████████████████\",\n      \"█████████████████                                                                             ████████████████\",\n      \"██████████████                                                                                   █████████████\",\n      \"████████████                                                                                       ███████████\",\n      \"██████████                                                                                           █████████\",\n      \"█████████       ███████                                                                 ███████       ████████\",\n      \"████████    █████████████                                                             █████████████    ███████\",\n      \"███████  █████████████████  ██████████████████                   ██████████████████  █████████████████  ██████\",\n      \"█████████████████████████████████████████████████             ████████████████████████████████████████████████\",\n      \"███████████████████████████████████████████████████         ██████████████████████████████████████████████████\",\n      \"█████████████████████████████████████████████████████     ████████████████████████████████████████████████████\",\n      \"██████████████████████████████████████████████████████   █████████████████████████████████████████████████████\",\n      \"███████████████████████████████████████████████████████ ██████████████████████████████████████████████████████\",\n      \"██████████████████████████████████████████████████████████████████████████████████████████████████████████████\",\n      \"██████████████████████████████████████████████████████████████████████████████████████████████████████████████\",\n      \"*/\"\n    ],\n    \"description\": \"Extra Design\"\n  }\n}\n"
  }
}
